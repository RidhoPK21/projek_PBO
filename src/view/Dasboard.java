/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import entity.Jobs;
import java.awt.GridBagConstraints;
import java.awt.BorderLayout;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.Toolkit;
import java.util.ArrayList;
import javax.swing.BorderFactory;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JDialog;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.JTextArea;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import repository.JobsRepository;

/**
 *
 * @author firman_hutasoit
 */
public class Dasboard extends javax.swing.JFrame {

    /**
     * Creates new form Main
     */
    public Dasboard() {
        initComponents();
        updateJobPanel();
        
        
        //updateDetailsPanel(job);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jToggleButton3 = new javax.swing.JToggleButton();
        jPanel1 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jButtonAdd = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        jToggleButton3.setText("jToggleButton1");
        jToggleButton3.setPreferredSize(new java.awt.Dimension(200, 42));
        jToggleButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton3ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("DASBOR ADMIN");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        setPreferredSize(new java.awt.Dimension(1440, 900));

        jPanel1.setPreferredSize(new java.awt.Dimension(240, 900));
        jPanel1.setRequestFocusEnabled(false);

        jPanel3.setPreferredSize(new java.awt.Dimension(200, 398));

        jLabel7.setFont(new java.awt.Font("Snap ITC", 0, 18)); // NOI18N
        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Document.png"))); // NOI18N
        jLabel7.setText("User view");
        jLabel7.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel7MouseClicked(evt);
            }
        });

        jLabel8.setBackground(new java.awt.Color(143, 149, 165));
        jLabel8.setFont(new java.awt.Font("Snap ITC", 0, 18)); // NOI18N
        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Chart.png"))); // NOI18N
        jLabel8.setText("Dashboard");
        jLabel8.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel8MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel4)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8))
                .addGap(0, 51, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel4)
                .addGap(11, 11, 11)
                .addComponent(jLabel8)
                .addGap(39, 39, 39)
                .addComponent(jLabel7)
                .addContainerGap(702, Short.MAX_VALUE))
        );

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel2.setText("Hai Heri :)");
        jLabel2.setPreferredSize(new java.awt.Dimension(101, 24));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/heri.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 155, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(50, 50, 50)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 825, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(255, 255, 255));
        jPanel2.setPreferredSize(new java.awt.Dimension(1154, 900));

        jButtonAdd.setBackground(new java.awt.Color(153, 204, 255));
        jButtonAdd.setText("Add Job");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jPanel5.setBackground(new java.awt.Color(255, 255, 255));
        jPanel5.setPreferredSize(new java.awt.Dimension(1150, 870));

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 902, Short.MAX_VALUE)
        );

        jTextField1.setForeground(new java.awt.Color(204, 204, 204));
        jTextField1.setText("Type Here To Search");
        jTextField1.setCaretColor(new java.awt.Color(204, 204, 204));
        jTextField1.setDisabledTextColor(new java.awt.Color(204, 204, 204));
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 102, 255));
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/search-x24.png"))); // NOI18N
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, 999, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                        .addGap(16, 16, 16)
                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 421, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 377, Short.MAX_VALUE)
                        .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(186, 186, 186))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jButtonAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(15, 15, 15)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, 902, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 1191, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 1001, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 1001, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jToggleButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jToggleButton3ActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed

     // Membuat dialog
    JDialog dialog = new JDialog((JFrame) null, "Tambah Pekerjaan", true);

    // Atur ukuran dialog menjadi layar penuh
    dialog.setSize(Toolkit.getDefaultToolkit().getScreenSize()); // Dialog memenuhi layar
    dialog.setLayout(new GridBagLayout()); // Menggunakan GridBagLayout untuk fleksibilitas tata letak

    GridBagConstraints gbc = new GridBagConstraints();
    gbc.fill = GridBagConstraints.HORIZONTAL; // Komponen akan mengisi ruang horizontal
    gbc.insets = new Insets(10, 30, 10, 30); // Menambah margin kiri, kanan, atas dan bawah (lebih besar)

    // Komponen input
    JTextField tfNamaPerusahaan = new JTextField();
    JTextField tfRolePekerjaan = new JTextField();
    JTextField tfTitle = new JTextField();
    JTextField tfStatus = new JTextField();
    JTextField tfLokasi = new JTextField();
    JTextField tfPengalaman = new JTextField();
    JTextField tfGaji = new JTextField();
    JTextArea taDeskripsi = new JTextArea(3, 20);
    JTextArea taKualifikasi = new JTextArea(3, 20);
    JCheckBox cbFinished = new JCheckBox("Finished");

    // Tambahkan komponen input dan label
    int row = 0;

    dialog.add(new JLabel("Nama Perusahaan:"), getGbc(gbc, 0, row));
    dialog.add(tfNamaPerusahaan, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Role Pekerjaan:"), getGbc(gbc, 0, row));
    dialog.add(tfRolePekerjaan, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Title:"), getGbc(gbc, 0, row));
    dialog.add(tfTitle, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Status:"), getGbc(gbc, 0, row));
    dialog.add(tfStatus, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Lokasi:"), getGbc(gbc, 0, row));
    dialog.add(tfLokasi, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Pengalaman:"), getGbc(gbc, 0, row));
    dialog.add(tfPengalaman, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Gaji:"), getGbc(gbc, 0, row));
    dialog.add(tfGaji, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Deskripsi:"), getGbc(gbc, 0, row));
    dialog.add(new JScrollPane(taDeskripsi), getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Kualifikasi:"), getGbc(gbc, 0, row));
    dialog.add(new JScrollPane(taKualifikasi), getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Apakah selesai?"), getGbc(gbc, 0, row));
    dialog.add(cbFinished, getGbc(gbc, 1, row++));

    // Tombol Simpan
    JButton btnSimpan = new JButton("Simpan");
    gbc.gridwidth = 2; // Tombol simpan akan menempati 2 kolom
    dialog.add(btnSimpan, getGbc(gbc, 0, ++row));

    // Action Listener untuk Tombol Simpan
    btnSimpan.addActionListener(e -> {
        if (tfNamaPerusahaan.getText().isEmpty() || tfTitle.getText().isEmpty()) {
            JOptionPane.showMessageDialog(dialog, "Harap isi semua data yang diperlukan!", "Peringatan", JOptionPane.WARNING_MESSAGE);
            return;
        }

        Jobs newJob = new Jobs(
            tfNamaPerusahaan.getText(),
            tfRolePekerjaan.getText(),
            tfTitle.getText(),
            tfStatus.getText(),
            tfLokasi.getText(),
            tfPengalaman.getText(),
            tfGaji.getText(),
            taDeskripsi.getText(),
            taKualifikasi.getText(),
            cbFinished.isSelected(),
            null
        );

        int jobId = new JobsRepository().repoAddJobs(newJob);
        if (jobId != -1) {
            JOptionPane.showMessageDialog(dialog, "Pekerjaan berhasil ditambahkan!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            updateJobPanel();
        } else {
            JOptionPane.showMessageDialog(dialog, "Gagal menambahkan pekerjaan!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
        dialog.dispose();
    });

    // Tampilkan dialog
    dialog.setVisible(true);

    }//GEN-LAST:event_jButtonAddActionPerformed


    
    private void jLabel8MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel8MouseClicked
        // TODO add your handling code here:
        setUIMenuActive(1);
    }//GEN-LAST:event_jLabel8MouseClicked

    private void jLabel7MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel7MouseClicked
        // TODO add your handling code here:
        setUIMenuActive(2);
    }//GEN-LAST:event_jLabel7MouseClicked

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

         
    
        private void setUIMenuActive(int target) {
//        resetUIMenu();
//        pnlContent.removeAll();
//        pnlContent.setLayout(new BoxLayout(pnlContent, BoxLayout.Y_AXIS));
     switch (target) {
            case 1 -> {
                jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Chart.png")));
                jLabel8.setForeground(new Color(0x8F95A5));
                jLabel7.setForeground(new Color(0x000000));
//                pnlContent.add(new HomePanel(repo, () -> {
//                    setUIMenuActive(1);
//                }));
            }
            case 2 -> {
                jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/assets/Chart.png")));
                jLabel7.setForeground(new Color(0x8F95A5));
                jLabel8.setForeground(new Color(0x000000));
//                pnlContent.add(new HomePanel(repo, () -> {
//                    setUIMenuActive(1);
//                }));
            }
     }
    }
    
    public class Job {
    private int id;
    private String namaPerusahaan;
    private String title;
    private String status;
    private String lokasi;
    private int pengalaman;
    private double gaji;
    private String deskripsi;
    private String kualifikasi;
    private boolean finished;

    public Job(int id, String namaPerusahaan, String title, String status, String lokasi, int pengalaman, double gaji, String deskripsi, String kualifikasi, boolean finished) {
        this.id = id;
        this.namaPerusahaan = namaPerusahaan;
        this.title = title;
        this.status = status;
        this.lokasi = lokasi;
        this.pengalaman = pengalaman;
        this.gaji = gaji;
        this.deskripsi = deskripsi;
        this.kualifikasi = kualifikasi;
        this.finished = finished;
    }

    // Getter dan Setter (opsional, sesuai kebutuhan)
    public int getId() { return id; }
    public String getNamaPerusahaan() { return namaPerusahaan; }
    public String getTitle() { return title; }
    public String getStatus() { return status; }
    public String getLokasi() { return lokasi; }
    public int getPengalaman() { return pengalaman; }
    public double getGaji() { return gaji; }
    public String getDeskripsi() { return deskripsi; }
    public String getKualifikasi() { return kualifikasi; }
    public boolean isFinished() { return finished; }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Dasboard.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Dasboard().setVisible(true);
            }
        });
    }
    
  
  private void updateJobPanel() {
    jPanel5.removeAll(); // Hapus semua komponen sebelumnya

    // Ambil data pekerjaan dari database
    ArrayList<Jobs> jobs = new JobsRepository().repoGetAllJobs();

    // Kolom untuk tabel
    String[] columnNames = {"ID", "Nama Perusahaan", "Role", "Title", "Lokasi", "Pengalaman", "Gaji", "Finished", "Aksi"};
    DefaultTableModel tableModel = new DefaultTableModel(columnNames, 0) {
        @Override
        public boolean isCellEditable(int row, int column) {
            return column == 8; // Hanya kolom "Aksi" yang dapat diedit (untuk tombol)
        }
    };

    // Tambahkan data pekerjaan ke tabel
    jobs.forEach(job -> {
        tableModel.addRow(new Object[]{
            job.getId(),
            job.getNamaPerusahaan(),
            job.getRolePekerjaan(),
            job.getTitle(),
            job.getLokasiPekerjaan(),
            job.getPengalaman(),
            job.getGaji(),
            job.getFinished() ? "Yes" : "No",
            "Aksi" // Label untuk kolom tombol
        });
    });

    // Tabel dengan model
    JTable jobsTable = new JTable(tableModel);
    jobsTable.setRowHeight(40);
    
        // Tambahkan listener untuk menampilkan detail di jPanel6
    jobsTable.getSelectionModel().addListSelectionListener(event -> {
        if (!event.getValueIsAdjusting()) {
            int selectedRow = jobsTable.getSelectedRow();
            if (selectedRow != -1) {
                // Ambil data pekerjaan dari baris yang dipilih
                int jobId = (int) tableModel.getValueAt(selectedRow, 0);
                Jobs selectedJob = jobs.stream()
                                       .filter(job -> job.getId() == jobId)
                                       .findFirst()
                                       .orElse(null);

                if (selectedJob != null) {
                    // Tampilkan deskripsi dan kualifikasi di jPanel6
                    showJobDetailsFrame(selectedJob);
                }
            }
        }
    });
    
    // Atur mode resize dan lebar kolom
    jobsTable.setAutoResizeMode(JTable.AUTO_RESIZE_ALL_COLUMNS);
    jobsTable.getColumnModel().getColumn(0).setPreferredWidth(50);  
    jobsTable.getColumnModel().getColumn(1).setPreferredWidth(150);  
    jobsTable.getColumnModel().getColumn(2).setPreferredWidth(110);  
    jobsTable.getColumnModel().getColumn(3).setPreferredWidth(120); 
    jobsTable.getColumnModel().getColumn(4).setPreferredWidth(120);  
    jobsTable.getColumnModel().getColumn(5).setPreferredWidth(110);    
    jobsTable.getColumnModel().getColumn(6).setPreferredWidth(110);
    jobsTable.getColumnModel().getColumn(7).setPreferredWidth(110); 
    jobsTable.getColumnModel().getColumn(8).setPreferredWidth(110); 


    // Tambahkan renderer dan editor untuk kolom "Aksi"
    jobsTable.getColumn("Aksi").setCellRenderer(new ButtonRenderer());
    jobsTable.getColumn("Aksi").setCellEditor(new ButtonEditor(new JButton(), jobsTable));

    // Tambahkan scroll pane
    JScrollPane scrollPane = new JScrollPane(jobsTable);

    // Atur layout panel
    jPanel5.setLayout(new BorderLayout());
    jPanel5.add(scrollPane, BorderLayout.CENTER);

    jPanel5.revalidate();
    jPanel5.repaint();
}
  
 private void editJob(int jobId) {
    JobsRepository jobsRepository = new JobsRepository();

    // Ambil pekerjaan berdasarkan ID
    Jobs job = jobsRepository.repoGetAllJobs()
                             .stream()
                             .filter(j -> j.getId() == jobId)
                             .findFirst()
                             .orElse(null);

    if (job == null) {
        JOptionPane.showMessageDialog(this, "Pekerjaan tidak ditemukan!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        return;
    }

    // Dialog untuk edit pekerjaan
    JDialog dialog = new JDialog((JFrame) null, "Edit Pekerjaan", true);
    dialog.setSize(Toolkit.getDefaultToolkit().getScreenSize()); // Dialog memenuhi layar
    dialog.setLayout(new GridBagLayout()); // Menggunakan GridBagLayout

    GridBagConstraints gbc = new GridBagConstraints();
    gbc.fill = GridBagConstraints.HORIZONTAL; // Komponen akan mengisi ruang horizontal
    gbc.insets = new Insets(10, 30, 10, 30); // Margin di sekitar komponen

    // Komponen input
    JTextField tfNamaPerusahaan = new JTextField(job.getNamaPerusahaan());
    JTextField tfRolePekerjaan = new JTextField(job.getRolePekerjaan());
    JTextField tfTitle = new JTextField(job.getTitle());
    JTextField tfStatus = new JTextField(job.getStatusPekerjaan());
    JTextField tfLokasi = new JTextField(job.getLokasiPekerjaan());
    JTextField tfPengalaman = new JTextField(job.getPengalaman());
    JTextField tfGaji = new JTextField(job.getGaji());
    JCheckBox cbFinished = new JCheckBox("Finished", job.getFinished());

    // Menambahkan komponen dan label
    int row = 0;

    dialog.add(new JLabel("Nama Perusahaan:"), getGbc(gbc, 0, row));
    dialog.add(tfNamaPerusahaan, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Role Pekerjaan:"), getGbc(gbc, 0, row));
    dialog.add(tfRolePekerjaan, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Title:"), getGbc(gbc, 0, row));
    dialog.add(tfTitle, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Status:"), getGbc(gbc, 0, row));
    dialog.add(tfStatus, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Lokasi:"), getGbc(gbc, 0, row));
    dialog.add(tfLokasi, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Pengalaman:"), getGbc(gbc, 0, row));
    dialog.add(tfPengalaman, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Gaji:"), getGbc(gbc, 0, row));
    dialog.add(tfGaji, getGbc(gbc, 1, row++));

    dialog.add(new JLabel("Finished:"), getGbc(gbc, 0, row));
    dialog.add(cbFinished, getGbc(gbc, 1, row++));

    // Tombol Simpan
    JButton btnSimpan = new JButton("Simpan");
    gbc.gridwidth = 2; // Tombol simpan akan menempati 2 kolom
    dialog.add(btnSimpan, getGbc(gbc, 0, ++row));

    // Action Listener untuk Tombol Simpan
    btnSimpan.addActionListener(e -> {
        // Perbarui data pekerjaan
        job.setNamaPerusahaan(tfNamaPerusahaan.getText());
        job.setRolePekerjaan(tfRolePekerjaan.getText());
        job.setTitle(tfTitle.getText());
        job.setStatusPekerjaan(tfStatus.getText());
        job.setLokasiPekerjaan(tfLokasi.getText());
        job.setPengalaman(tfPengalaman.getText());
        job.setGaji(tfGaji.getText());
        job.setFinished(cbFinished.isSelected());

        // Simpan ke database
        if (jobsRepository.repoUpdateJobs(job)) {
            JOptionPane.showMessageDialog(dialog, "Pekerjaan berhasil diperbarui!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            updateJobPanel(); // Perbarui tampilan
        } else {
            JOptionPane.showMessageDialog(dialog, "Gagal memperbarui pekerjaan!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }

        dialog.dispose();
    });

    dialog.setVisible(true);
}

    private void removeJob(int jobId) {
    int confirm = JOptionPane.showConfirmDialog(this, "Anda yakin ingin menghapus pekerjaan ini?", "Konfirmasi", JOptionPane.YES_NO_OPTION);

    if (confirm == JOptionPane.YES_OPTION) {
        JobsRepository jobsRepository = new JobsRepository();
        if (jobsRepository.repoRemoveJobs(jobId)) {
            JOptionPane.showMessageDialog(this, "Pekerjaan berhasil dihapus!", "Informasi", JOptionPane.INFORMATION_MESSAGE);
            updateJobPanel(); // Perbarui tampilan tabel
        } else {
            JOptionPane.showMessageDialog(this, "Gagal menghapus pekerjaan!", "Kesalahan", JOptionPane.ERROR_MESSAGE);
        }
    }
}
    
    class ButtonEditor extends javax.swing.AbstractCellEditor implements javax.swing.table.TableCellEditor, java.awt.event.ActionListener {
    private JButton button;
    private JTable table;

    public ButtonEditor(JButton button, JTable table) {
        this.button = button;
        this.table = table;
        
       
        this.button.addActionListener(this);
    }

    @Override
    public Object getCellEditorValue() {
        return "Aksi";
    }

    @Override
    public java.awt.Component getTableCellEditorComponent(
        JTable table, Object value, boolean isSelected, int row, int column) {
        return button;
    }

    @Override
    public void actionPerformed(java.awt.event.ActionEvent e) {
        int row = table.getSelectedRow();
        int jobId = (int) table.getValueAt(row, 0); // Ambil ID pekerjaan dari kolom pertama

        String[] options = {"Edit", "Remove"};
        int choice = JOptionPane.showOptionDialog(
            table, "Pilih aksi untuk pekerjaan ini:", "Aksi",
            JOptionPane.DEFAULT_OPTION, JOptionPane.QUESTION_MESSAGE, null, options, options[0]);

        if (choice == 0) { // Edit
            editJob(jobId);
        } else if (choice == 1) { // Remove
            removeJob(jobId);
        }
        fireEditingStopped(); // Hentikan editing pada cell
    }
}

    
    class ButtonRenderer extends JButton implements javax.swing.table.TableCellRenderer {
    public ButtonRenderer() {
        setOpaque(true);
    }

    @Override
    public java.awt.Component getTableCellRendererComponent(
        JTable table, Object value, boolean isSelected, boolean hasFocus, int row, int column) {
        setText("Edit / Remove");
         // Warna tombol (biru) dan warna teks (putih)
//        setBackground(new Color(100, 149, 237)); // Warna biru
//        setForeground(Color.WHITE);            // Teks putih

        // Warna saat tombol dipilih
//        if (isSelected) {
//            setBackground(new Color(100, 149, 237)); // Warna biru lebih terang
//             setForeground(Color.WHITE);  
//        }
        return this;
    }
}


    
    private void showJobDetailsFrame(Jobs job) {
    // Membuat frame baru
    JFrame frame = new JFrame("Detail Pekerjaan");
    frame.setSize(Toolkit.getDefaultToolkit().getScreenSize()); // Layar penuh
    frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE); // Tutup frame tanpa mempengaruhi parent
    frame.setLayout(new GridBagLayout());

    GridBagConstraints gbc = new GridBagConstraints();
    gbc.fill = GridBagConstraints.HORIZONTAL; // Komponen akan mengisi ruang horizontal
    gbc.insets = new Insets(10, 30, 10, 30); // Margin di sekitar komponen

    // Komponen untuk menampilkan detail pekerjaan
    JLabel lblNamaPerusahaan = new JLabel("Nama Perusahaan: " + job.getNamaPerusahaan());
    lblNamaPerusahaan.setFont(new Font("Arial", Font.BOLD, 16));
    frame.add(lblNamaPerusahaan, getGbc(gbc, 0, 0));

    JLabel lblTitle = new JLabel("Title: " + job.getTitle());
    lblTitle.setFont(new Font("Arial", Font.PLAIN, 14));
    frame.add(lblTitle, getGbc(gbc, 0, 1));

    JLabel lblRole = new JLabel("Role: " + job.getRolePekerjaan());
    lblRole.setFont(new Font("Arial", Font.PLAIN, 14));
    frame.add(lblRole, getGbc(gbc, 0, 2));

    JLabel lblStatus = new JLabel("Status: " + job.getStatusPekerjaan());
    lblStatus.setFont(new Font("Arial", Font.PLAIN, 14));
    frame.add(lblStatus, getGbc(gbc, 0, 3));

    JLabel lblLokasi = new JLabel("Lokasi: " + job.getLokasiPekerjaan());
    lblLokasi.setFont(new Font("Arial", Font.PLAIN, 14));
    frame.add(lblLokasi, getGbc(gbc, 0, 4));

    JLabel lblPengalaman = new JLabel("Pengalaman: " + job.getPengalaman());
    lblPengalaman.setFont(new Font("Arial", Font.PLAIN, 14));
    frame.add(lblPengalaman, getGbc(gbc, 0, 5));

    JLabel lblGaji = new JLabel("Gaji: " + job.getGaji());
    lblGaji.setFont(new Font("Arial", Font.PLAIN, 14));
    frame.add(lblGaji, getGbc(gbc, 0, 6));

    // Deskripsi pekerjaan
    JLabel lblDeskripsi = new JLabel("Deskripsi Pekerjaan:");
    lblDeskripsi.setFont(new Font("Arial", Font.BOLD, 16));
    frame.add(lblDeskripsi, getGbc(gbc, 0, 7));

    JTextArea taDeskripsi = new JTextArea(job.getDeskripsiPekerjaan(), 5, 30);
    taDeskripsi.setLineWrap(true);
    taDeskripsi.setWrapStyleWord(true);
    taDeskripsi.setEditable(false);
    JScrollPane spDeskripsi = new JScrollPane(taDeskripsi);
    frame.add(spDeskripsi, getGbc(gbc, 0, 8));

    // Kualifikasi pekerjaan
    JLabel lblKualifikasi = new JLabel("Kualifikasi:");
    lblKualifikasi.setFont(new Font("Arial", Font.BOLD, 16));
    frame.add(lblKualifikasi, getGbc(gbc, 0, 9));

    JTextArea taKualifikasi = new JTextArea(job.getKualifikasi(), 5, 30);
    taKualifikasi.setLineWrap(true);
    taKualifikasi.setWrapStyleWord(true);
    taKualifikasi.setEditable(false);
    JScrollPane spKualifikasi = new JScrollPane(taKualifikasi);
    frame.add(spKualifikasi, getGbc(gbc, 0, 10));

    // Tombol Tutup
    JButton btnClose = new JButton("Tutup");
    btnClose.addActionListener(e -> frame.dispose());
    gbc.gridwidth = 2; // Tombol menempati dua kolom
    frame.add(btnClose, getGbc(gbc, 0, 11));

    // Tampilkan frame
    frame.setVisible(true);
}

// Fungsi untuk mengatur GridBagConstraints
private GridBagConstraints getGbc(GridBagConstraints gbc, int x, int y) {
    gbc.gridx = x;
    gbc.gridy = y;
    return gbc;
}




    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextPane jTextPane1;
    private javax.swing.JToggleButton jToggleButton3;
    // End of variables declaration//GEN-END:variables
}
